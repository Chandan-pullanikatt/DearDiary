{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\final-project-cipherschools-main\\\\src\\\\pages\\\\login\\\\sections\\\\form\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from './form.module.scss'; // Make sure the file name is correct\nimport BrandLogo from \"../../../../components/shared/brand\";\nimport Input from \"../../../../components/atoms/input\";\nimport Button from \"../../../../components/atoms/button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleJoinWithEmail = () => {\n    navigate('/Notes');\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"form-container\"],\n    children: [/*#__PURE__*/_jsxDEV(BrandLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: \"Join with Google\",\n        icon: \"bi:google\",\n        className: styles.google\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.option,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"or join with email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: styles.details,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"Type your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Type your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Join with Email\",\n          icon: \"material-symbols:login\",\n          className: styles.emailBtn,\n          handleClick: handleJoinWithEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","styles","BrandLogo","Input","Button","useNavigate","jsxDEV","_jsxDEV","Form","_s","email","setEmail","password","setPassword","navigate","handleJoinWithEmail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","form","text","icon","google","option","details","type","placeholder","value","onChange","e","target","emailBtn","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/final-project-cipherschools-main/src/pages/login/sections/form/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from './form.module.scss'; // Make sure the file name is correct\r\nimport BrandLogo from \"../../../../components/shared/brand\";\r\nimport Input from \"../../../../components/atoms/input\";\r\nimport Button from \"../../../../components/atoms/button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Form() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleJoinWithEmail = () => {\r\n        navigate('/Notes');\r\n    };\r\n\r\n    return (\r\n        <section className={styles[\"form-container\"]}>\r\n            <BrandLogo />\r\n            <div className={styles.form}>\r\n                <Button text=\"Join with Google\" icon=\"bi:google\" className={styles.google} />\r\n                <div className={styles.option}>\r\n                    <span>or join with email address</span>\r\n                </div>\r\n                <article className={styles.details}>\r\n                    <Input \r\n                        type=\"email\"\r\n                        placeholder=\"Type your email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                    />\r\n                    <Input \r\n                        type=\"password\" \r\n                        placeholder=\"Type your password\" \r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)} \r\n                    />\r\n                    <Button\r\n                        text=\"Join with Email\"\r\n                        icon=\"material-symbols:login\"\r\n                        className={styles.emailBtn}\r\n                        handleClick={handleJoinWithEmail}\r\n                    />\r\n                </article>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}